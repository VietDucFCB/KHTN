#include<iostream>
#include<cmath>
using namespace std;

void NhapMang(int a[], int n);
void XuatMang(int a[], int n);
void Them1PTu(int a[], int& n);
void Xoa1PTu(int a[], int& n);
void Sua1PTu(int a[], int n);
int ViTriMin(int a[], int n);
void KTraSoChanNhoHon2004(int a[], int n);
int DemSoLuongNTo(int a[], int n);
int TongGTriAm(int a[], int n);
void SapXepTangDanC1(int a[], int n);
void InRaSoChan(int a[], int n, int b[], int& m);
void InRaViTriGTriAm(int a[], int n, int b[], int& m);
int TimGTriDuongDauTien(int a[], int n);
int TimGTriChanCuoiCung(int a[], int n);
int TimVTriGTriDuongDauTien(int a[], int n);
int SoHoanThienCuoiCung(int a[], int n);
int TimSoNToDauTien(int a[], int n);
int TimSoDuongCuoiCung(int a[], int n);

int main()
{
	int a[100];
	int b[100];
	int n;
	int m;
	cout << "Nhap so luong PTu trong mang: ";
	cin >> n;
	cout << "Nhap cac phan tu trong mang:";
	NhapMang(a, n);

	cout << "Mang vua nhap la: ";
	XuatMang(a, n);

	cout << endl << "Nhap vi tri va gia tri muon them vao mang: " << endl;
	Them1PTu(a, n);

	cout << "Mang sau khi them la: ";
	XuatMang(a, n);

	cout << endl << "Nhap vi tri muon xoa khoi mang: " << endl;
	Xoa1PTu(a, n);

	cout << "Mang sau khi xoa la: ";
	XuatMang(a, n);

	cout << endl << "Nhap vi tri muon sua trong mang: " << endl;
	Sua1PTu(a, n);

	cout << "Mang sau khi sua la: ";
	XuatMang(a, n);

	cout << endl << "Vi tri cua gia tri nho nhat trong mang la: " << ViTriMin(a, n) << endl;

	KTraSoChanNhoHon2004(a, n);

	cout << endl << "So luong so nguyen to trong mang la: " << DemSoLuongNTo(a, n) << endl;

	cout << "Tong gia tri am trong mang la: " << TongGTriAm(a, n) << endl;

	SapXepTangDanC1(a, n);
	XuatMang(a, n);

	cout << endl << "Cac so chan trong mang la: ";
	InRaSoChan(a, n, b, m);
	XuatMang(b, m);

	cout << endl << "Vi tri cac gia tri am trong mang la: ";
	InRaViTriGTriAm(a, n, b, m);
	XuatMang(b, m);

	cout << endl << "Gia tri duong dau tien trong mang la: " << TimGTriDuongDauTien(a, n) << endl;

	cout << "Gia tri chan cuoi cung trong mang la: " << TimGTriChanCuoiCung(a, n) << endl;

	cout << "Vi tri gia tri duong dau tien trong mang la: " << TimVTriGTriDuongDauTien(a, n) << endl;

	cout << "So hoan thien cuoi cung trong mang la: " << SoHoanThienCuoiCung(a, n) << endl;

	cout << "So nguyen to dau tien trong mang la: " << TimSoNToDauTien(a, n) << endl;

	cout << "So duong cuoi cung trong mang la: " << TimSoDuongCuoiCung(a, n) << endl;

	return 0;
}


void NhapMang(int a[], int n)
{
	for (int i = 0; i < n; i++)
	{
		cin >> a[i];
	}
}

void XuatMang(int a[], int n)
{
	for (int i = 0; i < n; i++)
	{
		cout << a[i] << " ";
	}
}

void Them1PTu(int a[], int& n)
{
	int index;
	cin >> index;
	int x;
	cout << "Nhap PTu muon chen: ";
	cin >> x;
	for (int i = n - 1; i >= index; i--)
	{
		a[i + 1] = a[i];
	}
	a[index] = x;
	n++;

}

void Xoa1PTu(int a[], int& n)
{
	int index;
	cin >> index;
	for (int i = index; i < n; i++)
	{
		a[i] = a[i + 1];
	}
	n--;
}
void Sua1PTu(int a[], int n)
{
	int index;
	cin >> index;
	int x;
	cout << "Thay the thanh: ";
	cin >> x;
	a[index] = x;
}

int ViTriMin(int a[], int n)
{
	int min = a[0];
	int index = 0;
	for (int i = 0; i < n; i++)
	{
		if (a[i] < min)
		{
			min = a[i];
			index = i;
		}
	}
	return index;
}

void KTraSoChanNhoHon2004(int a[], int n)
{
	bool test = false;
	for (int i = 0; i < n; i++)
	{
		if (a[i] % 2 == 0 && a[i] < 2004)
		{
			test = true;
		}
	}
	if (test == true)
	{
		cout << "Co ton tai so chan nho hon 2004";
	}
	else {
		cout << "Khong co so chan nho hon 2004";
	}
}
bool LaNTo(int n)
{
	if (n <= 1)
	{
		return false;
	}
	for (int i = 2; i <= sqrt(n); i++)
	{
		if (n % i == 0)
		{
			return false;
		}
	}
	return true;
}
int DemSoLuongNTo(int a[], int n)
{
	int count = 0;
	for (int i = 0; i < n; i++)
	{
		if (LaNTo(a[i]) == true)
		{
			count++;
		}
	}
	return count;
}

int TongGTriAm(int a[], int n)
{
	int s = 0;
	for (int i = 0; i < n; i++)
	{
		if (a[i] < 0)
		{
			s += a[i];
		}
	}
	return s;
}

void SapXepTangDanC1(int a[], int n)
{
	for (int i = 0; i < n - 1; i++)
	{
		for (int j = i + 1; j < n; j++)
		{
			if (a[i] > a[j])
			{
				int temp = a[i];
				a[i] = a[j];
				a[j] = temp;
			}
		}
	}
	cout << "mang sau khi sap xep la: ";
}

void InRaSoChan(int a[], int n, int b[], int& m)
{
	m = 0;
	for (int i = 0; i < n; i++)
	{
		if (a[i] % 2 == 0)
		{
			b[m] = a[i];
			m++;
		}
	}
	cout << "Cac so chan la: ";
}

void InRaVTriGTriAm(int a[], int n, int b[], int& m)
{
	m = 0;
	for (int i = 0; i < n; i++)
	{
		if (a[i] < 0) {
			b[m] = i;
			m++;
		}
	}
	cout << "Cac vi tri co so am la: ";
}

int TimGTriDuongDauTien(int a[], int n)
{
	int index = 0;
	int count = 0;
	for (int i = 0; i < n; i++)
	{
		if (a[i] > 0)
		{
			index = i;
			break;
		}
		else
		{
			count++;
		}
	}
	return a[index];
	if (count == n)
	{
		return -1;
	}
}

int TimGTriChanCuoiCung(int a[], int n)
{
	int count = 0;
	for (int i = n - 1; i >= 0; i--)
	{
		if (a[i] % 2 == 0)
		{
			return a[i];
			break;
		}
		else
		{
			count++;
		}
	}
	if (count == n)
	{
		return -1;
	}
}

int TimVTriGTriDuongDauTien(int a[], int n)
{
	int index = 0;
	int count = 0;
	for (int i = 0; i < n; i++)
	{
		if (a[i] > 0)
		{
			index = i;
			break;
		}
		else
		{
			count++;
		}
	}
	return index;
	if (count == n)
	{
		return -1;
	}
}
int TongUocSo(int n)
{
	int s = 0;
	for (int i = 1; i < n; i++)
	{
		if (n % i == 0) {
			s += i;
		}
	}
	return s;
}

int SoHoanThienCuoiCung(int a[], int n)
{
	bool test = false;
	int index = 0;
	for (int i = n - 1; i >= 0; i--)
	{
		if (TongUocSo(a[i]) == a[i])
		{
			index = i;
			test = true;
			break;
		}
	}
	if (test == true)
	{
		return a[index];
	}
	else
	{
		return -1;
	}
}

int TimSoNToDauTien(int a[], int n)
{
	bool test = false;
	int index = 0;
	for (int i = 0; i < n; i++)
	{
		if (LaNTo(a[i]) == true)
		{
			test = true;
			index = i;
			break;
		}
	}
	if (test == true)
	{
		return a[index];
	}
	else
	{
		return -1;
	}
}

int TimSoDuongCuoiCung(int a[], int n)
{
	bool test = false;
	int index = 0;
	for (int i = n - 1; i >= 0; i--)
	{
		if (a[i] > 0)
		{
			test = true;
			index = i;
			break;
		}
	}
	if (test == true)
	{
		return a[index];
	}
	else
	{
		return -1;
	}
}

int SoNToCuoiCung(int a[], int n)
{
	bool test = false;
	int index = 0;
	for (int i = n - 1; i >= 0; i--)
	{
		if (LaNTo(a[i]) == true)
		{
			index = i;
			test = true;
			break;
		}
	}
	if (test == true)
	{
		return a[index];
	}
	else
	{
		return -1;
	}
}